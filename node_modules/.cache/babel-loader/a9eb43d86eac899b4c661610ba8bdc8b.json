{"ast":null,"code":"var _jsxFileName = \"/home/marina/VxTel/src/components/Modal/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport ReactModal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = (children, isOpen, setIsOpen) => {\n  _s();\n\n  var _prevModalRef$current;\n\n  const [modalStatus, setModalStatus] = useState(false);\n  const prevModalRef = useRef();\n  useEffect(() => {\n    prevModalRef.current = isOpen;\n  });\n  const modalPreviousValue = (_prevModalRef$current = prevModalRef.current) !== null && _prevModalRef$current !== void 0 ? _prevModalRef$current : isOpen;\n  useEffect(() => {\n    if (modalPreviousValue !== isOpen) {\n      console.log(isOpen, setIsOpen);\n      setModalStatus(isOpen);\n    }\n  }, [isOpen, setIsOpen, modalPreviousValue]);\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    shouldCloseOnOverlayClick: !false,\n    onRequestClose: setIsOpen,\n    isOpen: modalStatus,\n    ariaHideApp: false,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        background: '#F0F0F5',\n        color: '#000000',\n        borderRadius: '8px',\n        width: '736px',\n        border: 'none'\n      },\n      overlay: {\n        backgroundColor: '#121214e6'\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Modal, \"T59KCUec2OfcMLT+IiPX1A5flak=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/marina/VxTel/src/components/Modal/index.jsx"],"names":["useState","useEffect","useRef","ReactModal","Modal","children","isOpen","setIsOpen","modalStatus","setModalStatus","prevModalRef","current","modalPreviousValue","console","log","content","top","left","right","bottom","marginRight","transform","background","color","borderRadius","width","border","overlay","backgroundColor"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,SAAlB,EAA4BC,MAA5B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,aAAvB;;;AAEA,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,MAAX,EAAmBC,SAAnB,KAAiC;AAAA;;AAAA;;AAE7C,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BT,QAAQ,CAAC,KAAD,CAA7C;AAEA,QAAMU,YAAY,GAAGR,MAAM,EAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,YAAY,CAACC,OAAb,GAAuBL,MAAvB;AACD,GAFQ,CAAT;AAIA,QAAMM,kBAAkB,4BAAGF,YAAY,CAACC,OAAhB,yEAA2BL,MAAnD;AAEAL,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIW,kBAAkB,KAAKN,MAA3B,EAAkC;AAChCO,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAAoBC,SAApB;AACAE,MAAAA,cAAc,CAACH,MAAD,CAAd;AACD;AACF,GALQ,EAKP,CAACA,MAAD,EAAQC,SAAR,EAAkBK,kBAAlB,CALO,CAAT;AAOE,sBACE,QAAC,UAAD;AACE,IAAA,yBAAyB,EAAE,CAAC,KAD9B;AAEE,IAAA,cAAc,EAAEL,SAFlB;AAGE,IAAA,MAAM,EAAEC,WAHV;AAIE,IAAA,WAAW,EAAE,KAJf;AAKE,IAAA,KAAK,EAAE;AACLO,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,KADE;AAEPC,QAAAA,IAAI,EAAE,KAFC;AAGPC,QAAAA,KAAK,EAAE,MAHA;AAIPC,QAAAA,MAAM,EAAE,MAJD;AAKPC,QAAAA,WAAW,EAAE,MALN;AAMPC,QAAAA,SAAS,EAAE,uBANJ;AAOPC,QAAAA,UAAU,EAAE,SAPL;AAQPC,QAAAA,KAAK,EAAE,SARA;AASPC,QAAAA,YAAY,EAAE,KATP;AAUPC,QAAAA,KAAK,EAAE,OAVA;AAWPC,QAAAA,MAAM,EAAE;AAXD,OADJ;AAcLC,MAAAA,OAAO,EAAE;AACPC,QAAAA,eAAe,EAAE;AADV;AAdJ,KALT;AAAA,cAwBGvB;AAxBH;AAAA;AAAA;AAAA;AAAA,UADF;AA6BH,CAhDD;;GAAMD,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["import { useState,useEffect,useRef} from 'react';\nimport ReactModal from 'react-modal';\n\nconst Modal = (children, isOpen, setIsOpen) => {\n\n  const [modalStatus,setModalStatus] = useState(false);\n\n  const prevModalRef = useRef();\n\n  useEffect(()=>{\n    prevModalRef.current = isOpen;\n  })\n\n  const modalPreviousValue = prevModalRef.current ?? isOpen;\n\n  useEffect(()=>{\n    if (modalPreviousValue !== isOpen){\n      console.log(isOpen, setIsOpen);\n      setModalStatus(isOpen) \n    }\n  },[isOpen,setIsOpen,modalPreviousValue]);\n \n    return (\n      <ReactModal\n        shouldCloseOnOverlayClick={!false}\n        onRequestClose={setIsOpen}\n        isOpen={modalStatus}\n        ariaHideApp={false}\n        style={{\n          content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n            background: '#F0F0F5',\n            color: '#000000',\n            borderRadius: '8px',\n            width: '736px',\n            border: 'none',\n          },\n          overlay: {\n            backgroundColor: '#121214e6',\n          },\n        }}\n      >\n        {children}\n      </ReactModal>\n    );\n  \n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}