{"ast":null,"code":"var _jsxFileName = \"/home/marina/VxTel/src/hooks/useCalls.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, ReactNode, useContext, useState, useRef, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phoneCallsData = {\n  originDestiny: '',\n  timeDurationCall: 0,\n  planName: ''\n};\nconst CallsContext = /*#__PURE__*/createContext(phoneCallsData);\nexport function CallsProvider({\n  children\n}) {\n  _s();\n\n  const [minuteValue, setMinuteValue] = useState(0);\n  const [newOriginDestiny, setNewOriginDestiny] = useState('');\n  const [newTimeDurationCall, setNewTimeDurationCall] = useState(0);\n  const [newPlanName, setNewPlanName] = useState('');\n  const [planValue, setPlanValue] = useState(0);\n  const [resultWithFaleMais, setResultWithFaleMais] = useState(0);\n  const [resultWithoutFaleMais, setResultWithoutFaleMais] = useState(0);\n\n  const handleCalculate = async (OriginDestinyData, DurationCallData, PlanData) => {\n    setNewOriginDestiny(OriginDestinyData);\n    setNewTimeDurationCall(DurationCallData);\n    setNewPlanName(PlanData);\n\n    const CallingMinuteValue = () => {\n      switch (newOriginDestiny) {\n        case '011-016':\n          return '1.90';\n\n        case '011-017':\n          return '1.70';\n\n        case '011-018':\n          return '0.90';\n\n        case '017-011':\n          return '2.70';\n\n        case '018-011':\n          return '1.90';\n\n        default:\n          return 0;\n      }\n    };\n\n    setMinuteValue(parseFloat(CallingMinuteValue));\n    console.log(minuteValue);\n    console.log(newOriginDestiny);\n    console.log(newTimeDurationCall);\n    console.log(newPlanName); //** VXTel Plan FaleMais Minute Value **//\n\n    const VXTelPlan = () => {\n      switch (planValue) {\n        case 'falemais-30':\n          return 30;\n\n        case 'falemais-60':\n          return 60;\n\n        case 'falemais-120':\n          return 120;\n\n        default:\n          return 0;\n      }\n    };\n\n    setPlanValue(VXTelPlan);\n    console.log(planValue); //** VXTel Plan FaleMais Name Value **//\n\n    const VXTelPlanName = () => {\n      switch (planValue) {\n        case 'falemais-30':\n          return 'FaleMais 30';\n\n        case 'falemais-60':\n          return 'FaleMais 60';\n\n        case 'falemais-120':\n          return 'FaleMais 120';\n\n        default:\n          return '';\n      }\n    };\n\n    setNewPlanName(VXTelPlanName);\n    console.log(newPlanName); //** Result with FaleMais **//\n\n    if (minuteValue <= planValue) {\n      const resultWithFaleMais = 0.00;\n      setResultWithFaleMais(resultWithFaleMais);\n    } else {\n      const remainingMinutes = planValue - minuteValue;\n      const newMinuteValue = minuteValue + minuteValue / 10;\n      const resultWithFaleMais = remainingMinutes * newMinuteValue;\n      return resultWithFaleMais;\n    } //** Result without FaleMais **//\n\n\n    setResultWithoutFaleMais(newTimeDurationCall * minuteValue);\n    console.log(resultWithFaleMais);\n    console.log(resultWithoutFaleMais);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CallsContext.Provider, {\n    value: {\n      handleCalculate,\n      newTimeDurationCall,\n      newOriginDestiny,\n      newPlanName,\n      resultWithFaleMais,\n      resultWithoutFaleMais\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CallsProvider, \"H2i2YX+E31RyRUv5qL958ygqwic=\");\n\n_c = CallsProvider;\nexport function useCalls() {\n  _s2();\n\n  const context = useContext(CallsContext);\n  return context;\n}\n\n_s2(useCalls, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CallsProvider\");","map":{"version":3,"sources":["/home/marina/VxTel/src/hooks/useCalls.jsx"],"names":["createContext","ReactNode","useContext","useState","useRef","useEffect","toast","phoneCallsData","originDestiny","timeDurationCall","planName","CallsContext","CallsProvider","children","minuteValue","setMinuteValue","newOriginDestiny","setNewOriginDestiny","newTimeDurationCall","setNewTimeDurationCall","newPlanName","setNewPlanName","planValue","setPlanValue","resultWithFaleMais","setResultWithFaleMais","resultWithoutFaleMais","setResultWithoutFaleMais","handleCalculate","OriginDestinyData","DurationCallData","PlanData","CallingMinuteValue","parseFloat","console","log","VXTelPlan","VXTelPlanName","remainingMinutes","newMinuteValue","useCalls","context"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useContext, useState, useRef, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nconst phoneCallsData = {\n    originDestiny:'',\n    timeDurationCall:0,\n    planName:'',\n  \n};\n\nconst CallsContext = createContext(phoneCallsData);\n\nexport function CallsProvider({children}){\n\n  const [minuteValue, setMinuteValue] = useState(0);\n  const [newOriginDestiny, setNewOriginDestiny] = useState('');\n  const [newTimeDurationCall, setNewTimeDurationCall] = useState(0);\n  const [newPlanName, setNewPlanName] = useState('');\n  const [planValue, setPlanValue] = useState(0);\n  const [resultWithFaleMais, setResultWithFaleMais] = useState(0);\n  const [resultWithoutFaleMais, setResultWithoutFaleMais] = useState(0);\n\n const handleCalculate = async (OriginDestinyData,DurationCallData,PlanData) => {\n\n    setNewOriginDestiny(OriginDestinyData);\n    setNewTimeDurationCall(DurationCallData);\n    setNewPlanName(PlanData);\n\n    const CallingMinuteValue = () => {\n\n      switch(newOriginDestiny){\n         case '011-016':\n           return ('1.90');\n         \n         case '011-017':\n           return ('1.70');\n         \n         case '011-018':\n           return ('0.90');\n         \n         case '017-011':\n           return ('2.70');\n         \n         case '018-011':\n           return ('1.90');\n         \n         default:\n            return (0);\n      }\n     \n    }\n\n    setMinuteValue(parseFloat(CallingMinuteValue));\n    console.log(minuteValue);\n    console.log(newOriginDestiny);\n    console.log(newTimeDurationCall);\n    console.log(newPlanName);\n\n    //** VXTel Plan FaleMais Minute Value **//\n\n    const VXTelPlan = () => {\n      switch(planValue){\n         case 'falemais-30':\n           return (30);\n         \n         case 'falemais-60':\n           return (60);\n         \n         case 'falemais-120':\n           return (120);\n\n         default:\n           return (0);\n      }\n    }\n\n    setPlanValue(VXTelPlan);\n    console.log(planValue);\n\n    //** VXTel Plan FaleMais Name Value **//\n\n      const VXTelPlanName = () => {\n        switch(planValue){\n           case 'falemais-30':\n             return ('FaleMais 30');\n           \n           case 'falemais-60':\n             return ('FaleMais 60');\n           \n           case 'falemais-120':\n             return ('FaleMais 120');\n           \n           default:\n           return ('');\n        }\n      }\n\n      setNewPlanName(VXTelPlanName);\n      console.log(newPlanName);\n\n\n    //** Result with FaleMais **//\n\n    if (minuteValue <= planValue) {\n      const resultWithFaleMais = 0.00;\n      setResultWithFaleMais(resultWithFaleMais);\n    }else{\n      const remainingMinutes = planValue - minuteValue;\n      const newMinuteValue = minuteValue + (minuteValue/10);\n      const resultWithFaleMais = remainingMinutes * newMinuteValue;\n      return resultWithFaleMais;\n    }\n   \n    //** Result without FaleMais **//\n    setResultWithoutFaleMais(newTimeDurationCall * minuteValue);\n\n    console.log(resultWithFaleMais);\n    console.log(resultWithoutFaleMais);\n  }\n\n  return (\n    <CallsContext.Provider\n      value={{ handleCalculate, newTimeDurationCall, newOriginDestiny, newPlanName, resultWithFaleMais, resultWithoutFaleMais }}\n    >\n      {children}\n    </CallsContext.Provider>\n  );\n\n}\n\nexport function useCalls(){\n  const context = useContext(CallsContext);\n\n  return context;\n}\n\n  "]},"metadata":{},"sourceType":"module"}